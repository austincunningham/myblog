(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d237cc7"],{fd3f:function(s,a,t){"use strict";t.r(a);var e=function(){var s=this,a=s.$createElement;s._self._c;return s._m(0)},r=[function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("section",[t("p",[t("img",{attrs:{src:"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gkabc2erkfgaceeax6qn.png",alt:""}})]),t("h1",[s._v("Install the Keycloak via the operator")]),t("p",[s._v("Create a project")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-bash"}},[s._v("oc new-project keycloak\n")])]),t("p",[s._v("I am going to install the operator the OperatorHub in Openshift which uses OLM(Operator Lifecyecle Manager). Select Operator/OperatorHub from the side bar and search for keycloak and install it in the keycloak namespace")]),t("p",[t("img",{attrs:{src:"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0sqtsuywlr70jun04wru.gif",alt:"Install the keycloak operator via operatorhub"}})]),t("p",[s._v("The install should finish\n"),t("img",{attrs:{src:"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t5h8uiovwb07yhpo0u00.png",alt:"Keycloak operator install is finished"}})]),t("p",[s._v("I will go through the requirements now. This will not be a production setup.")]),t("h2",[s._v("Install an DB")]),t("p",[s._v("Going to install an Ephemeral PostgreSQL DB as this is just a demo, create a yaml file called "),t("code",{pre:!0},[s._v("example-postgres.yaml")]),s._v(" with the following content.")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-yaml"}},[t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("apiVersion:")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("apps/v1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("kind:")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("StatefulSet")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("metadata:")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("name:")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("postgresql-db")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("spec:")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("serviceName:")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("postgresql-db-service")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("selector:")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("matchLabels:")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("app:")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("postgresql-db")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("replicas:")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("template:")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("metadata:")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("labels:")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("app:")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("postgresql-db")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("spec:")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("containers:")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"hljs-bullet"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("name:")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("postgresql-db")]),s._v("\n          "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("image:")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("postgres:latest")]),s._v("\n          "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("env:")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"hljs-bullet"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("name:")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("POSTGRES_PASSWORD")]),s._v("\n              "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("value:")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("postgres")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("#<-- change this")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"hljs-bullet"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("name:")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("POSTGRES_USER")]),s._v("\n              "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("value:")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("postgres")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("#<-- change this")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"hljs-bullet"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("name:")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("PGDATA")]),s._v("\n              "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("value:")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("/data/pgdata")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"hljs-bullet"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("name:")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("POSTGRES_DB")]),s._v("\n              "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("value:")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("keycloak")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-meta"}},[s._v("---")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("apiVersion:")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("v1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("kind:")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("Service")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("metadata:")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("name:")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("postgres-db")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("spec:")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("selector:")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("app:")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("postgresql-db")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("ports:")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"hljs-bullet"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("port:")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("5432")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("targetPort:")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("5432")]),s._v("\n")])]),t("p",[s._v("And then apply the file to the cluster")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":""}},[s._v("oc apply -f example-postgres.yaml\n")])]),t("p",[s._v("The result")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":""}},[s._v("statefulset.apps/postgresql-db created\nservice/postgres-db created\n")])]),t("p",[s._v("After checking the postgres pod logs I see the following error")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-bash"}},[s._v("mkdir: cannot create directory ‘/data’: Permission denied\n")])]),t("p",[s._v("Nothing is ever easy. This is because Openshift blocks containers being run as root. To get this to work we need to add a service account with the correct permissions and add that service account to the statefulset. This is a good reference "),t("a",{attrs:{href:"https://suedbroecker.net/2021/12/14/open-the-door-for-root-users-in-red-hat-openshift-example-statefulset%C2%B6/"}},[s._v("blog")]),s._v(" for more details. Here are the commands I used")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-bash"}},[t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# create the service account")]),s._v("\n~ oc create sa postgres-sa\nserviceaccount/postgres-sa created\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# add policy")]),s._v("\n~ oc adm policy add-scc-to-user anyuid -z postgres-sa\nclusterrole.rbac.authorization.k8s.io/system:openshift:scc:anyuid added: "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"postgres-sa"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# set the policy on the namespace")]),s._v("\n~ oc adm policy add-scc-to-user anyuid -z postgres-sa -n keycloak\nclusterrole.rbac.authorization.k8s.io/system:openshift:scc:anyuid added: "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"postgres-sa"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# add the service account to the statefulset")]),s._v("\n~ oc "),t("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("set")]),s._v(" sa statefulset postgresql-db postgres-sa\nstatefulset.apps/postgresql-db serviceaccount updated\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# delete the failing existing pod")]),s._v("\noc delete po postgresql-db-0\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# check the pods ")]),s._v("\n~ oc get po\nNAME                                 READY   STATUS    RESTARTS   AGE\nkeycloak-operator-5659f58f4b-vtrm9   1/1     Running   0          29m\npostgresql-db-0                      1/1     Running   0          8m55s\n")])]),t("p",[s._v("Ok that's working")]),t("h2",[s._v("Hostname")]),t("p",[s._v("We need a resolvable domain name. You can add any domain to your openshift cluster using a "),t("a",{attrs:{href:"https://docs.openshift.com/rosa/applications/deployments/osd-config-custom-domains-applications.html"}},[s._v("customDomain")]),s._v(". As I couldn't be bothered setting up an actual domain name here or a valid cert, this is a quick hack for creating a resolvable domain name on Openshift.")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-bash"}},[t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# create a self signed cert ")]),s._v("\nopenssl req -subj "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'/CN=apps.austin.me/O=Test Keycloak./C=US'")]),s._v(" -newkey rsa:2048 -nodes -keyout key.pem -x509 -days 365 -out certificate.pem\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# create cert project")]),s._v("\noc new-project certs\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# create a secret from that cert in the cert namespace")]),s._v("\noc create secret tls austin-me-tls --cert=austin.me.crt --key=austin.me.key -n certs\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# create a custom domain based on the cert")]),s._v("\noc apply -f - <<EOF                                                      \n---\napiVersion: managed.openshift.io/v1alpha1\nkind: CustomDomain\nmetadata:\n  name: cunningham\nspec:\n  domain: apps.austin.me\n  scope: External\n  certificate:\n    name: austin-me-tls\n    namespace: certs\nEOF\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# Wait for the custom domain to become ready ")]),s._v("\noc get customdomains                                              \nNAME         ENDPOINT                                          DOMAIN           STATUS\ncunningham   oeffrs.cunningham.aucunnin.lpi0.s1.devshift.org   apps.austin.me   Ready\n")])]),t("p",[s._v("All pretty standard at this point but the domain apps.austin.me doesn't exist. So here is the hack, edit the custom domain "),t("code",{pre:!0},[s._v("oc edit customdomain cunningham")]),s._v(" and replace the spec.host with the endpoint.")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-yaml"}},[t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("apiVersion:")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("managed.openshift.io/v1alpha1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("kind:")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("CustomDomain")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("metadata:")]),s._v(" \n  "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("name:")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("cunningham")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("spec:")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("certificate:")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("name:")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("austin-me-tls")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("namespace:")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("certs")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("domain:")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("oeffrs.cunningham.aucunnin.lpi0.s1.devshift.org")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("#<---- was apps.austin.me now points at the endpoint")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("loadBalancerType:")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("Classic")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("scope:")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("External")]),s._v("\n")])]),t("p",[s._v("So our domain going forward is the endpoint "),t("code",{pre:!0},[s._v("oeffrs.cunningham.aucunnin.lpi0.s1.devshift.org")])]),t("h2",[s._v("Create a DB secret")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-bash"}},[s._v("oc project keycloak\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# change these to match the secret used in your statefulset")]),s._v("\nkubectl create secret generic keycloak-db-secret \\\n  --from-literal=username=postgres \\\n  --from-literal=password=postgres\n")])]),t("h2",[s._v("Create the Keycloak CR")]),t("p",[s._v("The CR(Custom Resource) creates a instance of the Keycloak UI. Create a yaml file called "),t("code",{pre:!0},[s._v("example-kc.yaml")])]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-yaml"}},[t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("apiVersion:")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("k8s.keycloak.org/v2alpha1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("kind:")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("Keycloak")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("metadata:")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("name:")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("example-kc")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("spec:")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("instances:")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("db:")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("vendor:")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("postgres")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("host:")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("postgres-db")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("usernameSecret:")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("name:")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("keycloak-db-secret")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("key:")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("username")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("passwordSecret:")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("name:")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("keycloak-db-secret")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("key:")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("password")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("http:")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("tlsSecret:")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("austin-me-tls")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("hostname:")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("hostname:")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("oeffrs.cunningham.aucunnin.lpi0.s1.devshift.org")]),s._v("\n")])]),t("p",[s._v("And then apply the file")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-bash"}},[s._v("kubectl apply -f example-kc.yaml\n")])]),t("p",[s._v("We can check the CR status of keycloak, it will look like this when it is "),t("code",{pre:!0},[s._v("type: Ready")]),t("code",{pre:!0},[s._v('status: "True"')])]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-bash"}},[t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# using https://mikefarah.gitbook.io/yq/")]),s._v("\n~ oc get keycloak example-kc -oyaml | yq "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'.status'")]),s._v("\nconditions:\n  - lastTransitionTime: "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"2023-09-15T08:08:56.665783288Z"')]),s._v("\n    message: "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('""')]),s._v("\n    observedGeneration: 1\n    status: "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"True"')]),s._v("      "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("#<------ This is what we are looking for I hate these condition to difficult to read a first glance")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("type")]),s._v(": Ready\n  - lastTransitionTime: "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"2023-09-15T08:08:26.147242224Z"')]),s._v("\n    message: "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('""')]),s._v("\n    observedGeneration: 1\n    status: "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"False"')]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("type")]),s._v(": HasErrors\n  - lastTransitionTime: "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"2023-09-15T08:08:26.147242224Z"')]),s._v("\n    message: "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('""')]),s._v("\n    observedGeneration: 1\n    status: "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"False"')]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("type")]),s._v(": RollingUpdate\ninstances: 1\nobservedGeneration: 1\nselector: app=keycloak,app.kubernetes.io/managed-by=keycloak-operator,app.kubernetes.io/instance=example-kc\n\n")])]),t("p",[s._v("That looks to have completed and if we port-forward the service it looks to be working")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-bash"}},[s._v("~ oc port-forward service/example-kc-service 8443:8443\nForwarding from 127.0.0.1:8443 -> 8443\nForwarding from [::1]:8443 -> 8443\nHandling connection "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" 8443\nHandling connection "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" 8443\nHandling connection "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" 8443\nHandling connection "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" 8443\nHandling connection "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" 8443\n")])]),t("p",[t("img",{attrs:{src:"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ve5ibgtju5lygkqig1dg.png",alt:"Keycloak landing page after port forward"}})]),t("p",[s._v("And if we check the route we can open the keycloak landing page.")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-bash"}},[s._v("oc get routes --namespace keycloak\nNAME                       HOST/PORT                                                    PATH   SERVICES             PORT    TERMINATION            WILDCARD\nexample-kc-ingress-76p8j   oeffrs.cunningham.aucunnin.lpi0.s1.devshift.org ... 1 more          example-kc-service   https   passthrough/Redirect   None\n")])]),t("p",[t("img",{attrs:{src:"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fdtz3dm9ydp14nshyy0r.png",alt:"Keycloak landing page using route"}})])])}],n=t("2877"),p={},l=Object(n["a"])(p,e,r,!1,null,null,null);a["default"]=l.exports}}]);
//# sourceMappingURL=chunk-2d237cc7.6978f48b.js.map