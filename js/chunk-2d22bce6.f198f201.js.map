{"version":3,"sources":["webpack:///./src/markdown/2025/ollama-python.md?2365","webpack:///./src/markdown/2025/ollama-python.md"],"names":["render","_vm","this","_h","$createElement","_self","_c","_m","staticRenderFns","_v","attrs","pre","script","component"],"mappings":"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","file":"js/chunk-2d22bce6.f198f201.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',[_c('h1',[_vm._v(\"Build a Local AI RAG App with Ollama and Python\")]),_c('p',[_c('img',{attrs:{\"src\":\"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fkwt1jqnwkfrax0iqlvn.png\",\"alt\":\"\"}})]),_c('p',[_vm._v(\"I was looking to do a little development around AI and decided to see what I could build on my PC.\")]),_c('p',[_vm._v(\"We tried \"),_c('a',{attrs:{\"href\":\"https://ollama.com/download/linux\"}},[_vm._v(\"Ollama\")]),_vm._v(\" for a local development environment. Ollama is an open-source tool that makes it easy to download, run, and manage large language models (LLMs) on your own computer.\")]),_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"v-pre\":\"\",\"class\":\"language-bash\"}},[_vm._v(\"curl -fsSL https://ollama.com/install.sh | sh\\n\")])]),_c('p',[_vm._v(\"Once downloaded and installed you can run as follows\")]),_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"v-pre\":\"\",\"class\":\"language-bash\"}},[_vm._v(\"~ ollama -v         \\nollama version is 0.6.5\\n~ ollama run mistral\\n>>> tell me about ollama run mistral\\n \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"Olama Run Mistral is a high-performance, open-source machine learning platform developed by OLMA.AI, a company based in Paris, France. The platform is designed to simplify the development and deployment of large-scale machine \\nlearning models with a focus on deep learning.\\nMistral stands out for its scalability, flexibility, and ease of use. It's built around a distributed architecture that allows users to train and deploy large-scale machine learning models efficiently across multiple GPUs and \\nclusters, reducing the time required for training and inference significantly.\\nSome key features of Olama\\\"\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-comment\"}},[_vm._v(\"# ====> you get the idea a chatbot in your terminal\")]),_vm._v(\"\\n\")])]),_c('p',[_vm._v(\"There is a bunch of models you can run https://ollama.com/search we will stick to mistral for the time being. And we need to keep it running to use it.\")]),_c('p',[_vm._v(\"So what are we going to try to do ? We are going to create an chat app that can query my local files directory and return answers based off the contents.\")]),_c('p',[_vm._v(\"First create requirements.txt and add the following, basically some libraries for interacting with text and ollama\")]),_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"v-pre\":\"\",\"class\":\"language-bash\"}},[_vm._v(\"langchain\\nlangchain-community\\nlangchain-ollama\\nlangchain-huggingface\\nchromadb\\nsentence-transformers\\n\")])]),_c('p',[_vm._v(\"Setup a virtual environment and install the requirements\")]),_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"v-pre\":\"\",\"class\":\"language-bash\"}},[_vm._v(\"sudo dnf install gcc-c++ python3-devel\\npip install langchain chromadb sentence-transformers ollama\\npython3 -m venv venv\\n\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-built_in\"}},[_vm._v(\"source\")]),_vm._v(\" venv/bin/activate\\npip install -r requirements.txt \\n\")])]),_c('p',[_vm._v(\"I create two files a main.py and utils/loaders.py\")]),_c('h2',[_vm._v(\"utils/loaders.py\")]),_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"v-pre\":\"\",\"class\":\"language-python\"}},[_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"from\")]),_vm._v(\" langchain_community.document_loaders \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"import\")]),_vm._v(\" DirectoryLoader, TextLoader\\n\\n\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"import\")]),_vm._v(\" os\\n\\n\\n\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-function\"}},[_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"def\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-title\"}},[_vm._v(\"load_sop_files\")]),_c('span',{pre:true,attrs:{\"class\":\"hljs-params\"}},[_vm._v(\"(directory: str)\")]),_vm._v(\":\")]),_vm._v(\"\\n    allowed_exts = (\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"'.md'\")]),_vm._v(\", \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"'.asciidoc'\")]),_vm._v(\", \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"'.txt'\")]),_vm._v(\")\\n\\n    docs = []\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"for\")]),_vm._v(\" root, _, files \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"in\")]),_vm._v(\" os.walk(directory):\\n        \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"for\")]),_vm._v(\" file \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"in\")]),_vm._v(\" files:\\n            \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"if\")]),_vm._v(\" file.lower().endswith(allowed_exts):\\n                path = os.path.join(root, file)\\n                \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"try\")]),_vm._v(\":\\n                    loader = TextLoader(path, encoding=\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"'utf-8'\")]),_vm._v(\")\\n                    docs.extend(loader.load())\\n                \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"except\")]),_vm._v(\" Exception \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"as\")]),_vm._v(\" e:\\n                    print(\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"f\\\"❌ Error loading \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-subst\"}},[_vm._v(\"{path}\")]),_vm._v(\": \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-subst\"}},[_vm._v(\"{e}\")]),_vm._v(\"\\\"\")]),_vm._v(\")\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"return\")]),_vm._v(\" docs\\n\")])]),_c('p',[_vm._v(\"utils/loaders.py function takes in a directory path and goes through all the files and finds type md,asciidoc and txt and breaks them up into an array utf-8 formatted langchain docs.\")]),_c('h2',[_vm._v(\"main.py\")]),_c('p',[_vm._v(\"First thing I do in main.py is add the libraries and then call the function in utils/loaders.py to load my docs into the application.\")]),_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"v-pre\":\"\",\"class\":\"language-python\"}},[_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"from\")]),_vm._v(\" utils.loaders \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"import\")]),_vm._v(\" load_sop_files \\n\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"from\")]),_vm._v(\" langchain.text_splitter \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"import\")]),_vm._v(\" \\n\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"from\")]),_vm._v(\" langchain_community.embeddings \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"import\")]),_vm._v(\" HuggingFaceEmbeddings\\n\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"from\")]),_vm._v(\" langchain_community.vectorstores \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"import\")]),_vm._v(\" Chroma\\n\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"from\")]),_vm._v(\" langchain.chains \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"import\")]),_vm._v(\" RetrievalQA\\n\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"from\")]),_vm._v(\" langchain_ollama \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"import\")]),_vm._v(\" OllamaLLM\\n\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"from\")]),_vm._v(\" langchain_huggingface \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"import\")]),_vm._v(\" HuggingFaceEmbeddings\\n\\n\\n\\n\\n\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-comment\"}},[_vm._v(\"# Load and prepare documents\")]),_vm._v(\"\\nprint(\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"📂 Loading SOP documents...\\\"\")]),_vm._v(\")\\n\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-comment\"}},[_vm._v(\"# pointing to local directory that is the same level as this project\")]),_vm._v(\"\\ndocs = load_sop_files(\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"../help/sops/\\\"\")]),_vm._v(\")\\n\")])]),_c('p',[_vm._v(\"LLM's need data split up into smaller sizes\")]),_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"v-pre\":\"\",\"class\":\"language-python\"}},[_vm._v(\"splitter = RecursiveCharacterTextSplitter(chunk_size=\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-number\"}},[_vm._v(\"500\")]),_vm._v(\", chunk_overlap=\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-number\"}},[_vm._v(\"100\")]),_vm._v(\")\\nchunks = splitter.split_documents(docs)\\n\")])]),_c('p',[_vm._v(\"We then need to convert the document data into a numeric format that can be handled by the LLM\")]),_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"v-pre\":\"\",\"class\":\"language-python\"}},[_vm._v(\"\\nprint(\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"🧠 Creating vector database...\\\"\")]),_vm._v(\")\\nembeddings = HuggingFaceEmbeddings(model_name=\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"all-MiniLM-L6-v2\\\"\")]),_vm._v(\")\\ndb = Chroma.from_documents(chunks, embeddings)\\n\")])]),_c('p',[_vm._v(\"We set up Ollama mistral to take the numeric db data and use to\\nto formulate its answers, We are not training a modal here but\\nusing the RAG(Retrieval-Augmented Generation) pattern\")]),_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"v-pre\":\"\",\"class\":\"language-python\"}},[_vm._v(\"retriever = db.as_retriever()\\nllm = OllamaLLM(model=\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"mistral\\\"\")]),_vm._v(\")\\nqa = RetrievalQA.from_chain_type(llm=llm, retriever=retriever, return_source_documents=\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-literal\"}},[_vm._v(\"True\")]),_vm._v(\")\\n\")])]),_c('blockquote',[_c('p',[_c('strong',[_vm._v(\"NOTE :\")]),_vm._v(\" We are using the OllamaLLM and RetrievalQA to connect to our local LLM API but we could use the \"),_c('a',{attrs:{\"href\":\"https://github.com/ollama/ollama/blob/main/docs/api.md\"}},[_vm._v(\"Ollama API\")]),_vm._v(\" here with the \"),_c('code',{pre:true},[_vm._v(\"/api/generate\")]),_vm._v(\" end point, but this would be more verbose.\")])]),_c('p',[_vm._v(\"We then have a loop here to answer queries using the qa we created earlier as a source with the invoke function\")]),_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"v-pre\":\"\",\"class\":\"language-python\"}},[_vm._v(\"\\nprint(\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"🤖 SOP Assistant ready. Type your question below. Type 'exit' to quit.\\\"\")]),_vm._v(\")\\n\\n\\n\\n\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"while\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-literal\"}},[_vm._v(\"True\")]),_vm._v(\":\\n   query = input(\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"\\\\n📝 You: \\\"\")]),_vm._v(\")\\n   \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"if\")]),_vm._v(\" query.lower() \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"in\")]),_vm._v(\" (\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"exit\\\"\")]),_vm._v(\", \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"quit\\\"\")]),_vm._v(\"):\\n       print(\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"👋 Bye! Take care.\\\"\")]),_vm._v(\")\\n       \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"break\")]),_vm._v(\"\\n\\n\\n   result = qa.invoke({\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"query\\\"\")]),_vm._v(\": query})\\n\\n\\n   print(\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"\\\\n🤖 Assistant:\\\\n\\\"\")]),_vm._v(\", result[\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"result\\\"\")]),_vm._v(\"])\\n\\n\\n   print(\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"\\\\n📎 Sources:\\\"\")]),_vm._v(\")\\n   \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"for\")]),_vm._v(\" doc \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"in\")]),_vm._v(\" result[\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"\\\"source_documents\\\"\")]),_vm._v(\"]:\\n       print(\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"f\\\" - \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-subst\"}},[_vm._v(\"{doc.metadata.get(\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"'source'\")]),_vm._v(\")}\")]),_vm._v(\"\\\"\")]),_vm._v(\")\\n\")])]),_c('p',[_vm._v(\"Repo https://github.com/austincunningham/sop_assistant\")]),_c('p',[_vm._v(\"It's returning answers based off the \"),_c('code',{pre:true},[_vm._v(\"../help/sops\")]),_vm._v(\" directory we passed in earlier\")]),_c('p',[_c('img',{attrs:{\"src\":\"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l21ciivffm9y8h2fjwvw.png\",\"alt\":\"Image description\"}})]),_c('p',[_vm._v(\"Credit to https://github.com/valerymo for a lot of the investigation on getting this operational.\")])])}]\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./ollama-python.md?vue&type=template&id=5ca3df9e&\"\nvar script = {}\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}