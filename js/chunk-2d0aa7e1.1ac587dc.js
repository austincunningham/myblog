(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0aa7e1"],{"10f2":function(s,t,e){"use strict";e.r(t);var n=function(){var s=this,t=s.$createElement;s._self._c;return s._m(0)},r=[function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("section",[e("h1",[s._v("Golang Mongo driver and Openshift")]),e("p",[e("img",{attrs:{src:"https://dev-to-uploads.s3.amazonaws.com/i/kpkgjlzozjrryfbb2j4l.png",alt:""}})]),e("p",[s._v("I wanted to learn how to create a rest Api with Golang and MongoDb, found a lot of tutorials\nusing the "),e("a",{attrs:{href:"https://github.com/go-mgo/mgo"}},[s._v("mgo")]),s._v(" library but as this was unmainitained. I used the\n"),e("a",{attrs:{href:"https://www.mongodb.com/blog/post/mongodb-go-driver-tutorial"}},[s._v("Mongo driver")]),s._v(" instead with\n"),e("a",{attrs:{href:"https://github.com/gorilla/mux"}},[s._v("gorilla/mux")]),s._v(". First set up package and imports.")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-golang"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("package")]),s._v(" main\n\n"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("import")]),s._v(" (\n\t"),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"fmt"')]),s._v("\n\t"),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"log"')]),s._v("\n\t"),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"net/http"')]),s._v("\n\t"),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"context"')]),s._v("\n\t"),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"encoding/json"')]),s._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"go.mongodb.org/mongo-driver/mongo"')]),s._v("\n\t"),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"go.mongodb.org/mongo-driver/mongo/options"')]),s._v("\n\t"),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"go.mongodb.org/mongo-driver/bson"')]),s._v("\n\t"),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"go.mongodb.org/mongo-driver/bson/primitive"')]),s._v("\n\t"),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"github.com/gorilla/mux"')]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"github.com/austincunningham/GolangUserRestApi/models"')]),s._v("\n)\n")])]),e("p",[s._v("Setup the routes and Mongo db connection")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-golang"}},[e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// setting a global DB struct to be accessible to route functions")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("type")]),s._v(" DB "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("struct")]),s._v(" {\n\tcollection *mongo.Collection\n}\n\n"),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// Define the routes")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("func")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("main")]),e("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")])]),s._v(" {\n\tfmt.Printf("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"REST API User from golang "')]),s._v(")\n\n\t"),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// Set client options")]),s._v("\n    clientOptions := options.Client().ApplyURI("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"mongodb://localhost:27017"')]),s._v(")\n\n\t"),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// Connect to MongoDB")]),s._v("\n\tclient, err := mongo.Connect(context.TODO(), clientOptions)\n\t"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" err != "),e("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("nil")]),s._v(" {\n\t\tlog.Fatal(err)\n\t}\n\n\t"),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// Check the connection")]),s._v("\n\terr = client.Ping(context.TODO(), "),e("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("nil")]),s._v(")\n\n\t"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" err != "),e("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("nil")]),s._v(" {\n\t\tlog.Fatal(err)\n\t}\n\t"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("defer")]),s._v(" client.Disconnect(context.TODO())\n\n\tcollection := client.Database("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"golang-user"')]),s._v(").Collection("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"users"')]),s._v(")\n\tdb := &DB{collection: collection }\n\t\n\n    \n\tfmt.Println("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Connected to MongoDB!"')]),s._v(")\n\n\t"),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//outputs")]),s._v("\n\tfmt.Printf("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Server listing on http://localhost:8080/users"')]),s._v(")\n\tfmt.Printf("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('" CTRL C to exit "')]),s._v(")\n\n\t"),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// Controller for endpoints")]),s._v("\n\tr := mux.NewRouter()\n\tr.HandleFunc("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"/users"')]),s._v(", db.AllUsers).Methods("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"GET"')]),s._v(")\n\tr.HandleFunc("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"/users/{id}"')]),s._v(", db.FindUser).Methods("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"GET"')]),s._v(")\n\tr.HandleFunc("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"/users"')]),s._v(", db.CreateUser).Methods("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"POST"')]),s._v(")\n\tr.HandleFunc("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"/users/{id}"')]),s._v(", db.UpdateUser).Methods("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"PUT"')]),s._v(")\n\tr.HandleFunc("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"/users/{id}"')]),s._v(", db.DeleteUser).Methods("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"DELETE"')]),s._v(")\n\n\t"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" err := http.ListenAndServe("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('":8080"')]),s._v(", r); err != "),e("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("nil")]),s._v(" {\n\t\tlog.Fatal(err)\n\t}\n}\n")])]),e("p",[s._v("Setup the model package")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-golang"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("package")]),s._v(" models\n\n"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("import")]),s._v(" (\n\t"),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"go.mongodb.org/mongo-driver/bson/primitive"')]),s._v("\n)\n\n"),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// the properties in Mongodb document")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("type")]),s._v(" User "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("struct")]),s._v(" {\n\tId primitive.ObjectID "),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('`json:"_id,omitempty" bson:"_id,omitempty"`')]),s._v("\n\tName "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("string")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('`bson:"name" json:"name"`')]),s._v("\n\tEmail "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("string")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('`bson:"email" json:"email"`')]),s._v("\n\tPassword "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("string")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('`bson:"password" json:"password"`')]),s._v("\n}\n")])]),e("p",[s._v("Back in the main package define the")]),e("p",[e("strong",[s._v("GET")]),s._v(" all users function")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-golang"}},[e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// find all users")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("func")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("(db *DB)")]),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("AllUsers")]),e("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("(res http.ResponseWriter, req *http.Request)")])]),s._v("{\n\tfmt.Println("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"AllUsers GET"')]),s._v(")\n\t"),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// create an array of users")]),s._v("\n\t"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" results []models.User\n\t"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" user models.User\n\t"),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// set the api header")]),s._v("\n\tres.Header().Set("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"content-type"')]),s._v(", "),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"application/json"')]),s._v(")\n\t"),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// set the find options, not sure I need this")]),s._v("\n\tfindOptions := options.Find()\n\t"),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// use the find command to get all")]),s._v("\n\tresult , err := db.collection.Find(context.TODO(), bson.D{{}}, findOptions)\n\t"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" err != "),e("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("nil")]),s._v(" {\n\t\tfmt.Println("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"AllUsers GET failed to query DB"')]),s._v(", err)\n\t}\n\t"),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//go through the result and decode each element at a time")]),s._v("\n\t"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" result.Next(context.TODO()){\n\t\terr := result.Decode(&user)\n        "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" err != "),e("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("nil")]),s._v(" {\n            log.Fatal(err)\n\t\t}\n\t\t"),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// add to the array")]),s._v("\n        results = "),e("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("append")]),s._v("(results, user)\n\t}\n\t"),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//return the array as json")]),s._v("\n\tjson.NewEncoder(res).Encode(results)\n}\n")])]),e("p",[e("strong",[s._v("GET")]),s._v(" find user by id function")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-golang"}},[e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// find a single user")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("func")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("(db *DB)")]),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("FindUser")]),e("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("(res http.ResponseWriter, req *http.Request)")])]),s._v("{\n\tfmt.Println("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"FindUser GET"')]),s._v(")\n\t"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" user models.User\n\tparams := mux.Vars(req)\n\tobjectId, _ := primitive.ObjectIDFromHex(params["),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"id"')]),s._v("])\n\tres.Header().Set("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"content-type"')]),s._v(", "),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"application/json"')]),s._v(")\n\tfilter := bson.M{"),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"_id"')]),s._v(": objectId}\n\terr := db.collection.FindOne(context.TODO(), filter).Decode(&user)\n\t"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" err != "),e("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("nil")]),s._v("{\n\t\tfmt.Println("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"error"')]),s._v(",err)\n\t}\n\tjson.NewEncoder(res).Encode(user)\n\n}\n")])]),e("p",[e("strong",[s._v("DELETE")]),s._v(" user by id is pretty similar")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-golang"}},[e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("func")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("(db *DB)")]),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("DeleteUser")]),e("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("(res http.ResponseWriter, req *http.Request)")])]),s._v("{\n\tfmt.Println("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"DeleteUser DELETE"')]),s._v(")\n\tparams := mux.Vars(req)\n\tobjectId, _ := primitive.ObjectIDFromHex(params["),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"id"')]),s._v("])\n\tres.Header().Set("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"content-type"')]),s._v(", "),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"application/json"')]),s._v(")\n\tfilter := bson.M{"),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"_id"')]),s._v(": objectId}\n\tresult, err := db.collection.DeleteOne(context.TODO(), filter)\n\t"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" err != "),e("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("nil")]),s._v("{\n\t\tfmt.Println("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"DeleteUser DELETE failed to query DB"')]),s._v(",err)\n\t}\n\tjson.NewEncoder(res).Encode(result)\n}\n")])]),e("p",[e("strong",[s._v("PUT")]),s._v(" update user by id")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-golang"}},[e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("func")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("(db *DB)")]),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("UpdateUser")]),e("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("(res http.ResponseWriter, req *http.Request)")])]),s._v("{\n\tfmt.Println("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"UpdateUser PUT"')]),s._v(")\n\t"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" user models.User\n\t"),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// get the id from the url")]),s._v("\n\tparams := mux.Vars(req)\n\tobjectId, _ := primitive.ObjectIDFromHex(params["),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"id"')]),s._v("])\n\t"),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// set the header info")]),s._v("\n\tres.Header().Set("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"content-type"')]),s._v(", "),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"application/json"')]),s._v(")\n\t"),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//set the filter on the id")]),s._v("\n\tfilter := bson.M{"),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"_id"')]),s._v(": objectId}\n\t"),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// decode the request body ")]),s._v("\n\t_ = json.NewDecoder(req.Body).Decode(&user)\n\tupdate := bson.M{"),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"$set"')]),s._v(": &user}\n\tresult,err := db.collection.UpdateOne(context.TODO(), filter, update)\n\t"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" err != "),e("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("nil")]),s._v("{\n\t\tfmt.Println("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"UpdateOne PUT failed to query DB "')]),s._v(",err)\n\t}\n\tjson.NewEncoder(res).Encode(result)\n}\n")])]),e("p",[e("strong",[s._v("POST")]),s._v(" create user")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-golang"}},[e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("func")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("(db *DB)")]),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("CreateUser")]),e("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("(res http.ResponseWriter, req *http.Request)")])]),s._v("{\n\tfmt.Println("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"CreateUser POST"')]),s._v(")\n    "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" user models.User\n\tres.Header().Set("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"content-type"')]),s._v(", "),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"application/json"')]),s._v(")\n\t_ = json.NewDecoder(req.Body).Decode(&user)\n\n\tresult, err := db.collection.InsertOne(context.TODO(), user)\n\t"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" err != "),e("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("nil")]),s._v(" {\n\t\tfmt.Println("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"CreateUser Error inserting record "')]),s._v(", err)\n\t}\n\tjson.NewEncoder(res).Encode(result)\n}\n")])]),e("p",[s._v("So the rest api is all setup at this point to connect to my local MongoDb.")]),e("h2",[s._v("Setup the container and deploy to Openshift")]),e("p",[s._v("First I set up a project in Openshift 3.11, on "),e("a",{attrs:{href:"https://www.okd.io/minishift/"}},[s._v("Minishift")])]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-bash"}},[s._v("oc new-project golanguser\n")])]),e("p",[s._v("Login to the Openshift console and deploy Mongodb from the Openshift catalog. Open the project in the console and click on "),e("code",{pre:!0},[s._v("Browse Catalog")])]),e("p",[e("img",{attrs:{src:"https://dev-to-uploads.s3.amazonaws.com/i/6s87xgigwjp9t079qkav.png",alt:"Alt Text"}})]),e("p",[s._v("Click on Mongodb")]),e("p",[e("img",{attrs:{src:"https://dev-to-uploads.s3.amazonaws.com/i/5wlte8gazfc8ltolqcpy.png",alt:"Alt Text"}})]),e("p",[s._v("Follow the creation flow until you get to "),e("code",{pre:!0},[s._v("Configuration")]),s._v(" set the following as some will be auto generated if you don't")]),e("p",[e("code",{pre:!0},[s._v("Database Service Name")])]),e("p",[e("code",{pre:!0},[s._v("MongoDB Connection Username")])]),e("p",[e("code",{pre:!0},[s._v("MongoDB Connection Password")])]),e("p",[e("code",{pre:!0},[s._v("MongoDB Database Name")])]),e("p",[e("code",{pre:!0},[s._v("MongoDB Admin Password")])]),e("p",[s._v("Once set click the create button")]),e("p",[e("img",{attrs:{src:"https://dev-to-uploads.s3.amazonaws.com/i/j0spux60fum5zr2l4sf6.png",alt:"Alt Text"}})]),e("p",[s._v("The Results screen will have the connection url. I will be using part of the connection url in the code.")]),e("p",[e("img",{attrs:{src:"https://dev-to-uploads.s3.amazonaws.com/i/6uvw4xdgctqs0p6ypf44.png",alt:"Alt Text"}})]),e("p",[s._v("Change the connection url in the main package here")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-golang"}},[e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// Set client options")]),s._v("\n    clientOptions := options.Client().ApplyURI("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"mongodb://myadmin:password@mongodb:27017"')]),s._v(")\n")])]),e("p",[s._v("And make sure that your collection is pointing at the correct db")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-golang"}},[s._v("collection := client.Database("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"golanguser"')]),s._v(").Collection("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"users"')]),s._v(")\n\tdb := &DB{collection: collection }\n")])]),e("p",[s._v("Once these are set we are ready to create the golang container with the following "),e("code",{pre:!0},[s._v("dockerfile")])]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-bash"}},[e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# Start from the latest golang base image")]),s._v("\nFROM golang:latest\n\n"),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# Set the Current Working Directory inside the container")]),s._v("\nWORKDIR /app\n\n"),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# Copy go mod and sum files")]),s._v("\nCOPY go.mod go.sum ./\n\n"),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# Download all dependencies. Dependencies will be cached if the go.mod and go.sum files are not changed")]),s._v("\nRUN go mod download\n\n"),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# Copy the source from the current directory to the Working Directory inside the container")]),s._v("\nCOPY . .\n\n"),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# Build the Go app")]),s._v("\nRUN go build -o main .\n\n"),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# Expose port 8080 to the outside world")]),s._v("\nEXPOSE 8080\n\n"),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# Command to run the executable")]),s._v("\nCMD ["),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"./main"')]),s._v("]\n")])]),e("p",[s._v("Build the image and push it to a remote registry")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-bash"}},[s._v("docker build -t austincunningham/golanguserrestapi:latest .\ndocker push austincunningham/golanguserrestapi:latest\n")])]),e("p",[s._v("You can then add the Image to project in the Openshift console "),e("code",{pre:!0},[s._v("Add to Project/Deploy Image")])]),e("p",[e("img",{attrs:{src:"https://dev-to-uploads.s3.amazonaws.com/i/kh8mr42iez0eig73v27n.png",alt:"Alt Text"}})]),e("p",[s._v("Enter the Image Name click the search icon and deploy when the image is found")]),e("p",[e("img",{attrs:{src:"https://dev-to-uploads.s3.amazonaws.com/i/omij1c8m1mmtpnjojyw8.png",alt:"Alt Text"}})]),e("p",[s._v("Once the container is deployed you can test the connection between MongoDb and the rest api as follows")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-bash"}},[s._v("oc project golanguser\noc get pods\nNAME                        READY     STATUS    RESTARTS   AGE\ngolanguserrestapi-1-7px9p   1/1       Running   1          14h\nmongodb-1-s9fkd             1/1       Running   6          8d\n"),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# log into the pod")]),s._v("\noc "),e("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("exec")]),s._v(" -it golanguserrestapi-1-7px9p bash\n"),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# curl and POST some data")]),s._v("\ncurl --header "),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Content-Type: application/json"')]),s._v("   --request POST   --data "),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('\'{"name":"austin","email":"austin@austin.com","password":"password"}\'')]),s._v(" http://localhost:8080/users\n"),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# successful response")]),s._v("\n{"),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"InsertedID"')]),s._v(":"),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"5ef7a5dba99a0cb3de9302dc"')]),s._v("}\n"),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# curl the GET all endpoint")]),s._v("\ncurl http://localhost:8080/users\n[{"),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"_id"')]),s._v(":"),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"5ef77db74e369e5acbf07a12"')]),s._v(","),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"name"')]),s._v(":"),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"austin"')]),s._v(","),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"email"')]),s._v(":"),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"austin@austin.com"')]),s._v(","),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"password"')]),s._v(":"),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"password"')]),s._v("}]\n\n")])]),e("p",[s._v("Final step is to add a route click on the rest container and "),e("code",{pre:!0},[s._v("create route")])]),e("p",[e("img",{attrs:{src:"https://dev-to-uploads.s3.amazonaws.com/i/e9asppukj1pp1zkbaat3.png",alt:"Alt Text"}})]),e("p",[s._v("Except the defaults your route will appear in the console it can be accessed from any where with the users route")]),e("p",[e("img",{attrs:{src:"https://dev-to-uploads.s3.amazonaws.com/i/c50lg6v7qqqv87ayogg3.png",alt:"Alt Text"}})]),e("p",[s._v("Code lives "),e("a",{attrs:{href:"https://github.com/austincunningham/GolangUserRestApi"}},[s._v("on github")]),s._v(" and the container image "),e("a",{attrs:{href:"https://hub.docker.com/repository/docker/austincunningham/golanguserrestapi"}},[s._v("on dockerhub")])])])}],a=e("2877"),l={},p=Object(a["a"])(l,n,r,!1,null,null,null);t["default"]=p.exports}}]);
//# sourceMappingURL=chunk-2d0aa7e1.1ac587dc.js.map