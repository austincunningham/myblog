(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0a3b08"],{"02f6":function(s,e,t){"use strict";t.r(e);var a=function(){var s=this,e=s.$createElement;s._self._c;return s._m(0)},n=[function(){var s=this,e=s.$createElement,t=s._self._c||e;return t("section",[t("h1",[s._v("Build an Ollama LLM software engineering language bot")]),t("p",[t("img",{attrs:{src:"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rfh0fafahopbbb5cmk6w.png",alt:""}})]),t("h2",[s._v("What")]),t("p",[s._v("Another step in AI learning I decided to see if I could build a AI software engineering language bot with an SRE context. We are going to use Ollama, a locally hosted LLM, all thought you could use any LLM chat endpoint by adjusting the backend.")]),t("h2",[s._v("Prerequisites")]),t("ul",[t("li",[s._v("ollama")]),t("li",[s._v("python3")]),t("li",[s._v("pip")])]),t("p",[s._v("Install and run ollama")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-bash"}},[s._v("curl -fsSL https://ollama.com/install.sh | sh\nollama run llama3\n")])]),t("h2",[s._v("Scaffold")]),t("p",[s._v("Create the following layout")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-bash"}},[s._v("sre-language-bot/\n├── static/\n│   ├── css/\n│   │   └── style.css\n│   └── js/\n│       └── main.js\n├── templates/\n│   └── index.html\n└── app.py\n\n")])]),t("p",[s._v("The ccs and js can remain empty for now")]),t("h2",[s._v("Backend")]),t("p",[s._v("We setup a basic flask app in app.py")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-python"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("import")]),s._v(" os\n"),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("import")]),s._v(" requests\n"),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("import")]),s._v(" json\n"),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("from")]),s._v(" flask "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("import")]),s._v(" Flask, request, jsonify, render_template\n\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# Initialize Flask")]),s._v("\napp = Flask(__name__)\n\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# Home route to serve the HTML UI from the templates folder")]),s._v("\n@app.route("),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'/'")]),s._v(")\n"),t("span",{pre:!0,attrs:{class:"hljs-function"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("def")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("index")]),t("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# load the html on the default route")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" render_template("),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'index.html'")]),s._v(")\n\n\n"),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" __name__ == "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'__main__'")]),s._v(":\n    "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# Flask will run on localhost:5000 by default.")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# The debug=True flag automatically reloads the server on code changes.")]),s._v("\n    app.run(debug="),t("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("True")]),s._v(")\n")])]),t("p",[s._v("And add something to index.html")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-html"}},[t("span",{pre:!0,attrs:{class:"hljs-meta"}},[s._v("<!DOCTYPE "),t("span",{pre:!0,attrs:{class:"hljs-meta-keyword"}},[s._v("html")]),s._v(">")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("html")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("lang")]),s._v("="),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"en"')]),s._v(">")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("head")]),s._v(">")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("</"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("head")]),s._v(">")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("body")]),s._v(">")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("h1")]),s._v(">")]),s._v("Chat bot goes here"),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("</"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("h1")]),s._v(">")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("</"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("body")]),s._v(">")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("</"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("html")]),s._v(">")]),s._v("\n")])]),t("p",[s._v("Run the "),t("code",{pre:!0},[s._v("python app.py")]),s._v(" to see if it works")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-bash"}},[s._v("python app.py\n * Serving Flask app "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'app'")]),s._v("\n * Debug mode: on\nWARNING: This is a development server. Do not use it "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("in")]),s._v(" a production deployment. Use a production WSGI server instead.\n * Running on http://127.0.0.1:5000\nPress CTRL+C to quit\n * Restarting with "),t("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("stat")]),s._v("\n * Debugger is active!\n * Debugger PIN: 661-293-891\n127.0.0.1 - - [08/Aug/2025 12:42:06] "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"GET / HTTP/1.1"')]),s._v(" 200 -\n127.0.0.1 - - [08/Aug/2025 12:42:06] "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"GET /favicon.ico HTTP/1.1"')]),s._v(" 404 -\n\n")])]),t("p",[t("img",{attrs:{src:"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/opgp5i1vp9eb1vchz3tp.png",alt:"Basic webpage with message chatbot goes here"}})]),t("h3",[s._v("Add the chat bot post request")]),t("p",[s._v("In "),t("code",{pre:!0},[s._v("app.py")]),s._v(" we add the post request, basically create a "),t("strong",[s._v("/chat")]),s._v(" endpoint and create a prompt "),t("em",[s._v("(the important bit for giving the llm context on which to base your answers)")]),s._v(" for the llm which favours software engineering answers in payload.messages.content")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-python"}},[s._v("@app.route("),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'/chat'")]),s._v(", methods=["),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'POST'")]),s._v("])\n"),t("span",{pre:!0,attrs:{class:"hljs-function"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("def")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("chat")]),t("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# get the chat history")]),s._v("\n    data = request.json\n    chat_history = data.get("),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'messages'")]),s._v(", [])\n\n    "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("not")]),s._v(" chat_history:\n        "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" jsonify({"),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'error'")]),s._v(": "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'No message history provided'")]),s._v("}), "),t("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("400")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("try")]),s._v(":\n        ollama_model = "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"llama3"')]),s._v("\n        ollama_api_url = "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"http://localhost:11434/api/chat"')]),s._v("\n\n        "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# The payload for the Ollama API request, including a specialized system prompt")]),s._v("\n        payload = {\n            "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"model"')]),s._v(": ollama_model,\n            "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"stream"')]),s._v(": "),t("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("False")]),s._v(",  "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# We want a single, complete response")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"messages"')]),s._v(": [\n                            {\n                                "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"role"')]),s._v(": "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"system"')]),s._v(",\n                                "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"content"')]),s._v(": "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"You are a helpful and knowledgeable assistant specializing in **Golang, Python,Bash and JavaScript** programming and **Site Reliability Engineering (SRE)** with a focus on **Kubernetes**. Provide detailed, accurate, and professional answers to technical questions. Always respond in markdown format."')]),s._v("\n                            }\n                        ] + chat_history  "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# Append the user's messages after the system prompt")]),s._v("\n        }\n\n        "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# Send the request to the Ollama API")]),s._v("\n        response = requests.post(ollama_api_url, json=payload, timeout="),t("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("120")]),s._v(")\n        response.raise_for_status()  "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# Raise an error for bad status codes")]),s._v("\n\n        "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# Parse the JSON response from Ollama")]),s._v("\n        ollama_data = response.json()\n        "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# Extract the content from the model's message")]),s._v("\n        model_response = ollama_data["),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'message'")]),s._v("]["),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'content'")]),s._v("]\n\n        "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" jsonify({"),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'response'")]),s._v(": model_response})\n    "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# Add some error handling")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("except")]),s._v(" requests.exceptions.RequestException "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("as")]),s._v(" e:\n        print("),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('f"Error calling Ollama API: '),t("span",{pre:!0,attrs:{class:"hljs-subst"}},[s._v("{e}")]),s._v('"')]),s._v(")\n        "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" jsonify(\n            {"),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'error'")]),s._v(": "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'Failed to connect to Ollama server. Please ensure it is running and accessible.'")]),s._v("}), "),t("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("500")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("except")]),s._v(" Exception "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("as")]),s._v(" e:\n        print("),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('f"An unexpected error occurred: '),t("span",{pre:!0,attrs:{class:"hljs-subst"}},[s._v("{e}")]),s._v('"')]),s._v(")\n        "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" jsonify({"),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'error'")]),s._v(": "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'An internal server error occurred.'")]),s._v("}), "),t("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("500")]),s._v("\n")])]),t("p",[s._v("Now test its working with a curl to the /chat endpoint")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-bash"}},[s._v("curl -X POST -H "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Content-Type: application/json"')]),s._v(" -d "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('\'{"messages": [{"role": "user", "content": "how are you."}]}\'')]),s._v(" http://127.0.0.1:5000/chat\n \n{\n  "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"response"')]),s._v(": "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("\"**I'm doing well, thank you for asking!** I'm a knowledgeable assistant specializing in Golang, Python, Bash, and JavaScript programming, as well as Site Reliability Engineering (SRE) with a focus on Kubernetes. I'm here to help answer any technical questions you may have, so feel free to ask me anything! **Let's get started!**\"")]),s._v("\n}\n\n")])]),t("p",[s._v("Ok that's pretty much the backend created")]),t("h2",[s._v("Frontend")]),t("p",[s._v("Using semantic ui for a bit of style to create a chatbox, don't think I need the "),t("code",{pre:!0},[s._v("static/ccs/style.ccs")]),s._v(" at this point as\nsemantic ui will handle the style.")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-html"}},[t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("div")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("id")]),s._v("="),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"messages"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("class")]),s._v("="),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"ui segment inverted chat-container"')]),s._v(">")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("div")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("class")]),s._v("="),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"ui center aligned basic inverted segment"')]),s._v(">")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("div")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("class")]),s._v("="),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"sub header"')]),s._v(">")]),s._v("Start the conversation! What would you like to know?"),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("</"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("div")]),s._v(">")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("</"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("div")]),s._v(">")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("</"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("div")]),s._v(">")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("div")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("class")]),s._v("="),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"ui action fluid input inverted"')]),s._v(">")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("input")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("type")]),s._v("="),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"text"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("id")]),s._v("="),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"user-input"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("placeholder")]),s._v("="),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Ask a question..."')]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("autocomplete")]),s._v("="),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"off"')]),s._v(">")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("button")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("class")]),s._v("="),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"ui button inverted green"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("id")]),s._v("="),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"send-btn"')]),s._v(">")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("i")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("class")]),s._v("="),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"paper plane outline icon"')]),s._v(">")]),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("</"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("i")]),s._v(">")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("</"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("button")]),s._v(">")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("</"),t("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("div")]),s._v(">")]),s._v("\n")])]),t("p",[s._v("And this gives us this basic ui with a chat box and send button")]),t("p",[t("img",{attrs:{src:"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hgwi8wifhrrp2y9gddex.png",alt:"Ui view with semantic ui elements"}})]),t("p",[s._v("And call the script that handles the call to the llm and formats and returns the response.")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":""}},[s._v("<script src=\"{​{ url_for('static', filename='js/main.js') }​}\"><\/script>\n")])]),t("p",[s._v("To control the user interface and handle the interaction with our backend, we need to add some JavaScript.\nThe following code goes into "),t("code",{pre:!0},[s._v("static/js/main.js")]),s._v(".")]),t("p",[s._v("First, we set up our event listeners and variables, ensuring the script only runs after the entire HTML document has been loaded.")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// Waiting for a send message and button click in the ui")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("document")]),s._v(".addEventListener("),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'DOMContentLoaded'")]),s._v(", (event) => {\n    "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// Get references to the HTML elements we will interact with")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" chatBox = "),t("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("document")]),s._v(".getElementById("),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'messages'")]),s._v(");\n    "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" inputField = "),t("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("document")]),s._v(".getElementById("),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'user-input'")]),s._v(");\n    "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" sendBtn = "),t("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("document")]),s._v(".getElementById("),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'send-btn'")]),s._v(");\n    "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// An array to store the conversation history for context")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" chatHistory = []; \n")])]),t("p",[s._v("This initial block of code finds and stores references to our key UI elements (messages, user-input, and send-btn) and initializes an empty array, chatHistory, which will for maintaining conversation context.")]),t("p",[s._v("Next, we define a helper function to format and display messages in the chat interface.")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-JavaScript"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" appendMessage = "),t("span",{pre:!0,attrs:{class:"hljs-function"}},[s._v("("),t("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("message, sender")]),s._v(") =>")]),s._v(" {\n    "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// Create a new div element for the message")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" messageDiv = "),t("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("document")]),s._v(".createElement("),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'div'")]),s._v(");\n    messageDiv.classList.add("),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'ui'")]),s._v(", "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'message'")]),s._v(", "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'segment'")]),s._v(");\n\n    "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" (sender === "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'user'")]),s._v(") {\n        "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// Style the message differently if it's from the user")]),s._v("\n        messageDiv.classList.add("),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'user-message'")]),s._v(", "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'right'")]),s._v(", "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'aligned'")]),s._v(");\n        messageDiv.innerHTML = "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("`<p>"),t("span",{pre:!0,attrs:{class:"hljs-subst"}},[s._v("${message}")]),s._v("</p>`")]),s._v(";\n    } "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("else")]),s._v(" {\n        "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// Style the message for the model's response")]),s._v("\n        messageDiv.classList.add("),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'model-message'")]),s._v(", "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'left'")]),s._v(", "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'aligned'")]),s._v(");\n        "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// Use marked.js to convert markdown from the model's response to HTML")]),s._v("\n        messageDiv.innerHTML = marked.parse(message);\n    }\n\n    "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// Add the message to the chat container")]),s._v("\n    chatBox.appendChild(messageDiv);\n    "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// Automatically scroll to the bottom to show the new message")]),s._v("\n    chatBox.scrollTop = chatBox.scrollHeight;\n\n    "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// After the model's message is added, highlight any code blocks")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" (sender === "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'model'")]),s._v(") {\n        hljs.highlightAll();\n    }\n};\n")])]),t("p",[s._v("The "),t("code",{pre:!0},[s._v("appendMessage")]),s._v(" function dynamically creates a new HTML div element, assigns appropriate CSS classes based on the sender (user or model), and inserts the message content. For the model's response, it uses the "),t("code",{pre:!0},[s._v("marked.js")]),s._v(" library to parse Markdown into rich HTML, which allows for formatted text, lists, and code blocks.\nFinally, "),t("code",{pre:!0},[s._v("hljs.highlightAll()")]),s._v(" is called to apply syntax highlighting to any code blocks present in the message.")]),t("p",[s._v("Now, we define the main logic for sending a message, which includes calling the backend and handling the response.")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-JavaScript"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" sendMessage = "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("async")]),s._v(" () => {\n    "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" message = inputField.value.trim();\n    "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" (message === "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("''")]),s._v(") "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v("; "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// Don't send empty messages")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v('// Clear the initial "Start the conversation" message')]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" (chatBox.querySelector("),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'p'")]),s._v(")) {\n        chatBox.innerHTML = "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("''")]),s._v(";\n    }\n\n    "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// Display the user's message in the chat")]),s._v("\n    appendMessage(message, "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'user'")]),s._v(");\n    inputField.value = "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("''")]),s._v("; "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// Clear the input field")]),s._v("\n    sendBtn.disabled = "),t("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("true")]),s._v(";\n    inputField.disabled = "),t("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("true")]),s._v(";\n\n    "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// Add the user message to our conversation history")]),s._v("\n    chatHistory.push({ "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("role")]),s._v(": "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'user'")]),s._v(", "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("content")]),s._v(": message });\n\n    "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v('// Add a "Typing..." loading indicator')]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" loadingIndicator = "),t("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("document")]),s._v(".createElement("),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'div'")]),s._v(");\n    loadingIndicator.classList.add("),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'ui'")]),s._v(", "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'message'")]),s._v(", "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'segment'")]),s._v(", "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'loading'")]),s._v(", "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'left'")]),s._v(", "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'aligned'")]),s._v(");\n    loadingIndicator.innerHTML = "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("`<p>Typing...</p>`")]),s._v(";\n    chatBox.appendChild(loadingIndicator);\n    chatBox.scrollTop = chatBox.scrollHeight;\n\n    "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("try")]),s._v(" {\n        "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// Make an asynchronous POST request to our Flask backend")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" response = "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("await")]),s._v(" fetch("),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'/chat'")]),s._v(", {\n            "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("method")]),s._v(": "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'POST'")]),s._v(",\n            "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("headers")]),s._v(": { "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'Content-Type'")]),s._v(": "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'application/json'")]),s._v(" },\n            "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("body")]),s._v(": "),t("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("JSON")]),s._v(".stringify({ "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("messages")]),s._v(": chatHistory }) "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// Send the full chat history")]),s._v("\n        });\n\n        "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" (response.ok) {\n            "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" data = "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("await")]),s._v(" response.json();\n            loadingIndicator.remove(); "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// Remove the loading indicator")]),s._v("\n            appendMessage(data.response, "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'model'")]),s._v("); "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// Display the model's response")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// Add the model's response to the conversation history")]),s._v("\n            chatHistory.push({ "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("role")]),s._v(": "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'assistant'")]),s._v(", "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("content")]),s._v(": data.response });\n        } "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("else")]),s._v(" {\n            loadingIndicator.remove();\n            appendMessage("),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'Sorry, something went wrong. Please try again.'")]),s._v(", "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'model'")]),s._v(");\n            "),t("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".error("),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'Server error:'")]),s._v(", response.statusText);\n        }\n    } "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("catch")]),s._v(" (error) {\n        "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// Handle any network or connection errors")]),s._v("\n        loadingIndicator.remove();\n        appendMessage("),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'Failed to connect to the server. Please check your connection.'")]),s._v(", "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'model'")]),s._v(");\n        "),t("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".error("),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'Fetch error:'")]),s._v(", error);\n    } "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("finally")]),s._v(" {\n        "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// Re-enable the input field and button, regardless of the outcome")]),s._v("\n        sendBtn.disabled = "),t("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("false")]),s._v(";\n        inputField.disabled = "),t("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("false")]),s._v(";\n        inputField.focus();\n    }\n};\n")])]),t("p",[s._v("The sendMessage function is the core of our frontend logic. It first retrieves the user's input, validates it, and disables the input and button to prevent multiple submissions. It then adds the user's message to chatHistory and displays it.")]),t("p",[s._v("A loadingIndicator is added to provide user feedback while the request is being processed. The fetch call then sends the entire chatHistory array to our "),t("code",{pre:!0},[s._v("/chat")]),s._v(" endpoint. Once a response is received, the loading indicator is removed, the model's response is displayed using appendMessage, and it's also added to chatHistory.")]),t("p",[s._v("The try...catch...finally block is for robust error handling and to ensure that the input field and button are re-enabled, regardless of whether the request succeeded or failed.")]),t("p",[s._v("Finally, we attach the sendMessage function to the UI elements that trigger it.")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-JavaScript"}},[t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// Add event listeners to trigger the sendMessage function")]),s._v("\nsendBtn.addEventListener("),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'click'")]),s._v(", sendMessage);\ninputField.addEventListener("),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'keypress'")]),s._v(", (e) => {\n    "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" (e.key === "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'Enter'")]),s._v(") {\n        sendMessage();\n    }\n});\n")])]),t("p",[s._v('This final block adds two event listeners. The first one listens for a click event on the sendBtn (the paper plane icon), and the second listens for a keypress event on the inputField. If the key pressed is "Enter," it also calls the sendMessage function.')]),t("p",[s._v("The message is formatted and appended: The appendMessage function formats the Markdown response into HTML and adds it to the chat container. "),t("code",{pre:!0},[s._v("highlight.js")]),s._v(" then applies syntax highlighting to any code blocks.")]),t("p",[s._v("To break down and add it all together")]),t("ul",[t("li",[t("p",[t("strong",[s._v("A message comes in")]),s._v(": A user types a message and sends it by either clicking the "),t("code",{pre:!0},[s._v("sendBtn")]),s._v(' or pressing "Enter" in the '),t("code",{pre:!0},[s._v("inputField")]),s._v(". This triggers the "),t("code",{pre:!0},[s._v("sendMessage")]),s._v(" function via an "),t("code",{pre:!0},[s._v("addEventListener")]),s._v(".")])]),t("li",[t("p",[t("strong",[s._v("It's sent to the API endpoint")]),s._v(": Inside the "),t("code",{pre:!0},[s._v("sendMessage")]),s._v(" function, a fetch call is made to the "),t("code",{pre:!0},[s._v("/chat")]),s._v(" endpoint. The body of the request is "),t("code",{pre:!0},[s._v("JSON.stringify({ messages: chatHistory })")]),s._v(", which includes the new message and the entire conversation history.")])]),t("li",[t("p",[t("strong",[s._v("It waits")]),s._v(": The code uses the "),t("code",{pre:!0},[s._v("await")]),s._v(" keyword with the fetch call, which pauses the execution of the "),t("code",{pre:!0},[s._v("sendMessage")]),s._v(" function until a response is received from the server.")])]),t("li",[t("p",[t("strong",[s._v("It responds")]),s._v(": The server sends back a message, and the response object is received by the fetch call. The code then\nuses await "),t("code",{pre:!0},[s._v("response.json()")]),s._v(" to parse the data.")])]),t("li",[t("p",[t("strong",[s._v("The message is formatted and appended to a div")]),s._v(": The "),t("code",{pre:!0},[s._v("appendMessage")]),s._v(" function is called with the server's response.\nInside this function:\n"),t("strong",[s._v("1.")]),t("code",{pre:!0},[s._v("document.createElement('div')")]),s._v(" creates a new div.\n"),t("strong",[s._v("2.")]),t("code",{pre:!0},[s._v("marked.parse(message)")]),s._v(" formats the message's Markdown into HTML.\n"),t("strong",[s._v("3.")]),t("code",{pre:!0},[s._v("chatBox.appendChild(messageDiv)")]),s._v(" appends the newly created and formatted div to the main chat container.\n"),t("strong",[s._v("4.")]),t("code",{pre:!0},[s._v("hljs.highlightAll()")]),s._v(" applies syntax highlighting to any code blocks within the new message.")])])]),t("h2",[s._v("Start the app to test")]),t("p",[s._v("Start the app with "),t("code",{pre:!0},[s._v("python app.py")])]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-bash"}},[s._v("python app.py\n * Serving Flask app "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'app'")]),s._v("\n * Debug mode: on\nWARNING: This is a development server. Do not use it "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("in")]),s._v(" a production deployment. Use a production WSGI server instead.\n * Running on http://127.0.0.1:5000\nPress CTRL+C to quit\n * Restarting with "),t("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("stat")]),s._v("\n * Debugger is active!\n * Debugger PIN: 661-293-891\n127.0.0.1 - - [11/Aug/2025 10:48:18] "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"GET / HTTP/1.1"')]),s._v(" 200 -\n127.0.0.1 - - [11/Aug/2025 10:48:18] "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"GET /static/css/style.css HTTP/1.1"')]),s._v(" 404 -\n127.0.0.1 - - [11/Aug/2025 10:48:18] "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"GET /static/js/main.js HTTP/1.1"')]),s._v(" 304 -\n127.0.0.1 - - [11/Aug/2025 10:49:28] "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"POST /chat HTTP/1.1"')]),s._v(" 200 -\n")])]),t("p",[s._v("And in the browser on localhost:5000 we can a query the llm")]),t("p",[t("img",{attrs:{src:"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8zsty1udtq3j4r47hazr.png",alt:"Image of a working ui with code block formatting"}})]),t("p",[s._v("Repo is here https://github.com/austincunningham/sre-language-bot")])])}],r=t("2877"),l={},p=Object(r["a"])(l,a,n,!1,null,null,null);e["default"]=p.exports}}]);
//# sourceMappingURL=chunk-2d0a3b08.5f2a64ac.js.map