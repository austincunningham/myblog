(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0a5500"],{"09bc":function(s,e,t){"use strict";t.r(e);var a=function(){var s=this,e=s.$createElement;s._self._c;return s._m(0)},r=[function(){var s=this,e=s.$createElement,t=s._self._c||e;return t("section",[t("h1",[s._v("Monitor internet uptime on your local PC")]),t("p",[t("img",{attrs:{src:"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qo9opg3zp6hflu0tloj3.png",alt:""}})]),t("p",[s._v("I wanted to monitor my Internet uptime and graph it over time on my PC which is on Fedora 39. I gave some taught to running ping scripts but these didn't meet my needs. After a bit of research I found that Prometheus has all the tools I need. First Installed Prometheus first I tried dnf but that failed")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-bash"}},[s._v("sudo dnf install -y prometheus\nNo match "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" argument: prometheus\nError: Unable to find a match: prometheus\n")])]),t("p",[s._v("So I installed from the "),t("a",{attrs:{href:"https://prometheus.io/download/"}},[s._v("binary")]),s._v(" when it's downloaded you get two binarys Prometheus,Promtool and a config file prometheus.yml after I extracted these I moved the binary to "),t("code",{pre:!0},[s._v("/usr/local/bin")]),s._v(" and the config file to "),t("code",{pre:!0},[s._v("/etc/prometheus/")])]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-bash"}},[s._v("sudo cp prometheus /usr/"),t("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("local")]),s._v("/bin\nsudo cp promtool /usr/"),t("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("local")]),s._v("/bin\nsudo cp prometheus.yml /etc/prometheus\n")])]),t("p",[s._v("I simplified my config prometheus.yml to two job one for prometheus and one for node_exporter(we will get to this in a while)")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-yaml"}},[t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("global:")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("scrape_interval:")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("15s")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("scrape_configs:")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"hljs-bullet"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("job_name:")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"prometheus"')]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("static_configs:")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"hljs-bullet"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("targets:")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('["localhost:9090"]')]),s._v("\n\n  "),t("span",{pre:!0,attrs:{class:"hljs-bullet"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("job_name:")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"node_exporter"')]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("static_configs:")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"hljs-bullet"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("targets:")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('["localhost:9100"]')]),s._v("\n")])]),t("p",[s._v("Make sure a prometheus user exists and has permissions to run the prometheus service")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-bash"}},[t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# check the user exists")]),s._v("\nid prometheus\nuid=977(prometheus) gid=971(prometheus) groups=971(prometheus)\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# add permissions to prometheus files")]),s._v("\nsudo chown -R prometheus:prometheus /etc/prometheus /var/lib/prometheus\nsudo chown prometheus:prometheus /usr/"),t("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("local")]),s._v("/bin/prometheus\n")])]),t("p",[s._v("I then created a service file which points at the binary and the config file and the storage destination")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-bash"}},[s._v("sudo vi /etc/systemd/system/prometheus.service\n")])]),t("p",[s._v("with the following contents")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-toml"}},[t("span",{pre:!0,attrs:{class:"hljs-section"}},[s._v("[Unit]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("Description")]),s._v("=Prometheus\n"),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("After")]),s._v("=network.target\n\n"),t("span",{pre:!0,attrs:{class:"hljs-section"}},[s._v("[Service]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("User")]),s._v("=prometheus\n"),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("Group")]),s._v("=prometheus\n"),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("ExecStart")]),s._v("=/usr/local/bin/prometheus --config.file=/etc/prometheus/prometheus.yml --storage.tsdb.path=/var/lib/prometheus/\n\n"),t("span",{pre:!0,attrs:{class:"hljs-section"}},[s._v("[Install]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("WantedBy")]),s._v("=multi-user.target\n")])]),t("p",[s._v("I then started the prometheus service")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-bash"}},[s._v("sudo systemctl "),t("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("enable")]),s._v(" --now prometheus\nCreated symlink /etc/systemd/system/multi-user.target.wants/prometheus.service → /etc/systemd/system/prometheus.service.\n")])]),t("p",[s._v("I needed to also install "),t("code",{pre:!0},[s._v("node_exporter")]),s._v(" to expose machine metrics from my local PC, fortunately dnf worked for this so no messing around with moving binarys and setting up config files and services")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-bash"}},[s._v("sudo yum install -y node_exporter\n")])]),t("p",[s._v("I could start the service out of the box")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-bash"}},[s._v("sudo systemctl "),t("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("enable")]),s._v(" --now node_exporter\nCreated symlink /etc/systemd/system/multi-user.target.wants/prometheus-node-exporter.service → /usr/lib/systemd/system/prometheus-node-exporter.service.\n")])]),t("p",[s._v("I now had the prometheus ui up and running with metrics exposed from the PC on http://localhost:9090 .")]),t("p",[t("img",{attrs:{src:"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qfuin7wbra203y3ovo4a.gif",alt:"animated gif showing the available metrics in the prometheus ui"}})]),t("p",[s._v("I needed a way to get my internet up time. Prometheus itself doesn't have a way to ping a remote service but it does have a package that can do this called "),t("code",{pre:!0},[s._v("blackbox_exporter")]),s._v(". I tried installing with dnf but it failed")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-bash"}},[s._v("sudo dnf install blackbox_exporter\nNo match "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" argument: blackbox_exporter\nError: Unable to find a match: blackbox_exporter\n")])]),t("p",[s._v("The binary was available for download at the "),t("a",{attrs:{href:"https://prometheus.io/download/"}},[s._v("prometheus download site")]),s._v(". So after I downloaded and extracted it I had a binary blackbox_exporter and a config file blackbox.yml. Similar process to before I copied the binary to "),t("code",{pre:!0},[s._v("/usr/local/bin")]),s._v(" and copied the config to "),t("code",{pre:!0},[s._v("/etc")]),s._v(". Again I created a service")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-bash"}},[s._v("sudo vi /etc/systemd/system/blackbox_exporter.service\n")])]),t("p",[s._v("With the following contents")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-toml"}},[t("span",{pre:!0,attrs:{class:"hljs-section"}},[s._v("[Unit]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("Description")]),s._v("=Blackbox Exporter\n"),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("After")]),s._v("=network.target\n\n"),t("span",{pre:!0,attrs:{class:"hljs-section"}},[s._v("[Service]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("ExecStart")]),s._v("=/usr/local/bin/blackbox_exporter --config.file=/etc/blackbox.yml\n"),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("Restart")]),s._v("=always\n"),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("User")]),s._v("=blackbox\n"),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("Group")]),s._v("=blackbox\n\n"),t("span",{pre:!0,attrs:{class:"hljs-section"}},[s._v("[Install]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("WantedBy")]),s._v("=multi-user.target\n")])]),t("p",[s._v("But when I attempted to start the service it failed as I hadn't setup the User and group as the status tells me")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-bash"}},[s._v("sudo systemctl "),t("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("enable")]),s._v(" --now blackbox_exporter        \nsudo systemctl status blackbox_exporter        \n× blackbox_exporter.service - Blackbox Exporter\n     Loaded: loaded (/etc/systemd/system/blackbox_exporter.service; enabled; preset: disabled)\n    Drop-In: /usr/lib/systemd/system/service.d\n             └─10-timeout-abort.conf\n     Active: failed (Result: "),t("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("exit")]),s._v("-code) since Fri 2025-02-28 08:28:12 GMT; 7s ago\n   Duration: 1ms\n    Process: 323975 ExecStart=/usr/"),t("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("local")]),s._v("/bin/blackbox_exporter --config.file=/etc/blackbox.yml (code=exited, status=216/GROUP)\n   Main PID: 323975 (code=exited, status=216/GROUP)\n        CPU: 907us\n\nFeb 28 08:28:12 fedora systemd[1]: blackbox_exporter.service: Scheduled restart job, restart counter is at 5.\nFeb 28 08:28:12 fedora systemd[1]: blackbox_exporter.service: Start request repeated too quickly.\nFeb 28 08:28:12 fedora systemd[1]: blackbox_exporter.service: Failed with result "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'exit-code'")]),s._v(".\nFeb 28 08:28:12 fedora systemd[1]: Failed to start blackbox_exporter.service - Blackbox Exporter.\n")])]),t("p",[s._v("So first I checked the blackbox user exists and created them and gave them permissions to the binary and config file")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-bash"}},[t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# check the user")]),s._v("\nid blackbox\nid: ‘blackbox’: no such user\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# create the user")]),s._v("\nsudo useradd -r -s /bin/"),t("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("false")]),s._v(" blackbox\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# confirm they were create ")]),s._v("\nid blackbox                           \nuid=976(blackbox) gid=970(blackbox) groups=970(blackbox)\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# give ownership to blackbox user and group the blackbox binary and config file")]),s._v("\nsudo chown blackbox:blackbox /usr/"),t("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("local")]),s._v("/bin/blackbox_exporter\nsudo chown blackbox:blackbox /etc/blackbox.yml         \n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# restart daemon and service")]),s._v("\nsudo systemctl daemon-reload\nsudo systemctl restart blackbox_exporter\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# check the status")]),s._v("\nsudo systemctl status blackbox_exporter\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# status is good")]),s._v("\n● blackbox_exporter.service - Blackbox Exporter\n     Loaded: loaded (/etc/systemd/system/blackbox_exporter.service; enabled; preset: disabled)\n    Drop-In: /usr/lib/systemd/system/service.d\n             └─10-timeout-abort.conf\n     Active: active (running) since Fri 2025-02-28 08:31:09 GMT; 7s ago\n   Main PID: 324468 (blackbox_export)\n      Tasks: 10 ("),t("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("limit")]),s._v(": 76747)\n     Memory: 21.3M\n        CPU: 10ms\n     CGroup: /system.slice/blackbox_exporter.service\n             └─324468 /usr/"),t("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("local")]),s._v("/bin/blackbox_exporter --config.file=/etc/blackbox.yml\n\nFeb 28 08:31:09 fedora systemd[1]: Started blackbox_exporter.service - Blackbox Exporter.\nFeb 28 08:31:09 fedora blackbox_exporter[324468]: time=2025-02-28T08:31:09.098Z level=INFO "),t("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("source")]),s._v("=main.go:86 msg="),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Starting blackbox_exporter"')]),s._v(" version="),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('">\nFeb 28 08:31:09 fedora blackbox_exporter[324468]: time=2025-02-28T08:31:09.098Z level=INFO source=main.go:87 msg="')]),s._v("(go=go1.23.6, platform=linux/amd64, u>\nFeb 28 08:31:09 fedora blackbox_exporter[324468]: time=2025-02-28T08:31:09.099Z level=INFO "),t("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("source")]),s._v("=main.go:99 msg="),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Loaded config file"')]),s._v("\nFeb 28 08:31:09 fedora blackbox_exporter[324468]: time=2025-02-28T08:31:09.099Z level=INFO "),t("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("source")]),s._v("=tls_config.go:347 msg="),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Listening on"')]),s._v(" address=[::]:9115\nFeb 28 08:31:09 fedora blackbox_exporter[324468]: time=2025-02-28T08:31:09.099Z level=INFO "),t("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("source")]),s._v("=tls_config.go:350 msg="),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"TLS is disabled."')]),s._v(" http2="),t("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("false")]),s._v(" >\n")])]),t("p",[s._v("Now I can confirm that the blackbox_exporter is working with the following curl command and it should return metrics")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-bash"}},[s._v("curl -s "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"http://localhost:9115/probe?module=icmp&target=8.8.8.8"')]),s._v(" \n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# HELP probe_dns_lookup_time_seconds Returns the time taken for probe dns lookup in seconds")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# TYPE probe_dns_lookup_time_seconds gauge")]),s._v("\nprobe_dns_lookup_time_seconds 9.23e-06\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# HELP probe_duration_seconds Returns how long the probe took to complete in seconds")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# TYPE probe_duration_seconds gauge")]),s._v("\nprobe_duration_seconds 0.010457657\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# HELP probe_icmp_duration_seconds Duration of icmp request by phase")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# TYPE probe_icmp_duration_seconds gauge")]),s._v("\nprobe_icmp_duration_seconds{phase="),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"resolve"')]),s._v("} 9.23e-06\nprobe_icmp_duration_seconds{phase="),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"rtt"')]),s._v("} 0.010111051\nprobe_icmp_duration_seconds{phase="),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"setup"')]),s._v("} 0.000212389\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# HELP probe_icmp_reply_hop_limit Replied packet hop limit (TTL for ipv4)")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# TYPE probe_icmp_reply_hop_limit gauge")]),s._v("\nprobe_icmp_reply_hop_limit 57\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# HELP probe_ip_addr_hash Specifies the hash of IP address. It's useful to detect if the IP address changes.")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# TYPE probe_ip_addr_hash gauge")]),s._v("\nprobe_ip_addr_hash 2.350491669e+09\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# HELP probe_ip_protocol Specifies whether probe ip protocol is IP4 or IP6")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# TYPE probe_ip_protocol gauge")]),s._v("\nprobe_ip_protocol 4\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# HELP probe_success Displays whether or not the probe was a success")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# TYPE probe_success gauge")]),s._v("\nprobe_success 1\n")])]),t("p",[s._v("Ok I am seeing metrics returned. We next need to add these metrics to prometheus. For this we need to add a job to the "),t("code",{pre:!0},[s._v("/etc/prometheus/prometheus.yml")]),s._v(" config file so we edit the config scrape_config so the file looks like")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-yaml"}},[t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("global:")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("scrape_interval:")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("15s")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("scrape_configs:")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"hljs-bullet"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("job_name:")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"blackbox"')]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("metrics_path:")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("/probe")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("params:")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("module:")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("[icmp]")]),s._v("  "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# this module is defined in the /etc/blackbox.yml file")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("static_configs:")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"hljs-bullet"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("targets:")]),s._v("\n          "),t("span",{pre:!0,attrs:{class:"hljs-bullet"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"8.8.8.8"')]),s._v("  "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# Google DNS (change to another IP to monitor)")]),s._v("\n          "),t("span",{pre:!0,attrs:{class:"hljs-bullet"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"8.8.4.4"')]),s._v(" \n    "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("relabel_configs:")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"hljs-bullet"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("source_labels:")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("[__address__]")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("target_label:")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("__param_target")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"hljs-bullet"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("source_labels:")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("[__param_target]")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("target_label:")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("instance")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"hljs-bullet"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("target_label:")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("__address__")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("replacement:")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("localhost:9115")]),s._v("\n  \n  "),t("span",{pre:!0,attrs:{class:"hljs-bullet"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("job_name:")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"prometheus"')]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("static_configs:")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"hljs-bullet"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("targets:")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('["localhost:9090"]')]),s._v("\n\n  "),t("span",{pre:!0,attrs:{class:"hljs-bullet"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("job_name:")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"node_exporter"')]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("static_configs:")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"hljs-bullet"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("targets:")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('["localhost:9100"]')]),s._v("\n")])]),t("blockquote",[t("p",[t("strong",[s._v("NOTE:")]),s._v(" this would be good to monitor any web page or services ip address by updating the target list for now we will stick to the google dns. See "),t("a",{attrs:{href:"https://prometheus.io/docs/guides/multi-target-exporter/"}},[s._v("Prometheus docs")]),s._v(" for more info")])]),t("p",[s._v("Once this is updated restart the prometheus service")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-bash"}},[s._v("sudo systemctl restart prometheus\n")])]),t("p",[s._v("The result on localhost:9090 we can check the "),t("code",{pre:!0},[s._v("up")]),s._v(" metric to see if our internet is up over time 1 is good 0 is bad.")]),t("p",[t("img",{attrs:{src:"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8tcd61z79ovgqjbblufr.png",alt:"Prometheus ui showing the up metric"}})]),t("p",[s._v("I installed grafana to get a prettier graph, dnf worked")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-bash"}},[s._v("sudo dnf install grafana\n")])]),t("p",[s._v("The Grafana services was running on http://localhost:3000/ logged in with the default user admin and the default password admin, was asked to update the password by the ui. I had an issue adding the Prometheus data source , Was seeing the follow error")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-bash"}},[s._v("Error reading Prometheus: Get "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"http://127.0.0.1:9090/api/v1/query?query=1%2B1&time=1740751852.139"')]),s._v(": dial tcp 127.0.0.1:9090: connect: permission denied\n")])]),t("p",[s._v("After a lot of messing around found it was a selinux restriction as I could connect to the datasource when selinux was disabled")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-bash"}},[t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# works when this is disabled")]),s._v("\nsudo setenforce 0\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# doesn't when enabled")]),s._v("\nsudo setenforce 1\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# checked the journalctl log")]),s._v("\nsudo journalctl -t setroubleshoot | tail -20\nFeb 28 14:25:33 fedora setroubleshoot[359567]: SELinux is preventing grafana-server from name_connect access on the tcp_socket port 9090.\n                                               \n                                               *****  Plugin catchall_boolean (89.3 confidence) suggests   ******************\n                                               \n                                               If you want to allow grafana to can tcp connect prometheus port\n                                               Then you must tell SELinux about this by enabling the "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'grafana_can_tcp_connect_prometheus_port'")]),s._v(" boolean.\n                                               \n                                               Do\n                                               setsebool -P grafana_can_tcp_connect_prometheus_port 1\n                                               \n                                               *****  Plugin catchall (11.6 confidence) suggests   **************************\n                                               \n                                               If you believe that grafana-server should be allowed name_connect access on the port 9090 tcp_socket by default.\n                                               Then you should report this as a bug.\n                                               You can generate a "),t("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("local")]),s._v(" policy module to allow this access.\n                                               Do\n                                               allow this access "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" now by executing:\n                                               "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# ausearch -c 'grafana-server' --raw | audit2allow -M my-grafanaserver")]),s._v("\n                                               "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# semodule -X 300 -i my-grafanaserver.pp")]),s._v("\n                                               \n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# I set the selinux bool as the first section of the journal log suggested")]),s._v("\nsudo setsebool -P grafana_can_tcp_connect_prometheus_port 1\n")])]),t("p",[s._v("And that was it was able to add the datasource in grafana.")]),t("p",[t("img",{attrs:{src:"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0ruildkjegcuwy07w3ra.png",alt:"Image of datasource up in grafana ui"}})]),t("p",[s._v("Sometimes you really get into the weeds. Anyway here is grafana dashboard")]),t("p",[t("img",{attrs:{src:"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s1b8ny25oh7qy928nlkm.png",alt:"Image of grafana up dashboard"}})])])}],n=t("2877"),o={},l=Object(n["a"])(o,a,r,!1,null,null,null);e["default"]=l.exports}}]);
//# sourceMappingURL=chunk-2d0a5500.5a7ac8f5.js.map